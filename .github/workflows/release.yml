name: Build and Release Multiple Platforms

on:
  workflow_dispatch:
    inputs:
      quickjs_version:
        description: 'QuickJS version'
        required: true
        default: '2024-01-13'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: linux
            arch: x86_64
            suffix: .a
            build_args: ""
          - platform: linux
            arch: i386
            suffix: .a
            build_args: "CC=gcc -m32 CXX=g++ -m32"
          - platform: windows
            arch: x86_64
            suffix: .lib
            build_args: "CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++"
          - platform: macos
            arch: x86_64
            suffix: .a
            build_args: "CC=o64-clang CXX=o64-clang++"
          - platform: macos
            arch: arm
            suffix: .a
            build_args: "CC=arm64-clang CXX=arm64-clang++"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential mingw-w64 gcc-multilib g++-multilib

      - name: Run fetch_and_build.sh
        run: |
          bash fetch_and_build.sh ${{ matrix.build_args }}

      - name: Rename and Collect Artifacts
        run: |
          mkdir -p artifacts-${{ matrix.platform }}-${{ matrix.arch }}
          find . -name '*${{ matrix.suffix }}' -exec bash -c 'cp {} artifacts-${{ matrix.platform }}-${{ matrix.arch }}/$(basename {} | sed "s/quickjs/quickjs-${{ matrix.platform }}-${{ matrix.arch }}/")' \;

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-${{ matrix.platform }}-${{ matrix.arch }}
          path: ./artifacts-${{ matrix.platform }}-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.quickjs_version }}.${{ github.run_number }}
          release_name: QuickJS Release ${{ github.event.inputs.quickjs_version }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in $(find ./artifacts -name '*.lib' -o -name '*.a'); do
            echo "Uploading ${file} to release..."
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            "https://uploads.github.com/repos/DarcJC/QuickJS-build/releases/${{ steps.create_release.outputs.id }}/assets?name=$(basename "$file")" \
            --data-binary @"$file"
          done
