name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential mingw-w64

      - name: Run fetch_and_build.sh (Linux)
        run: bash fetch_and_build.sh

      - name: Rename and Collect Linux Artifacts
        run: |
          mkdir -p artifacts-linux
          find . -name '*.a' -exec bash -c 'cp {} artifacts-linux/$(basename {} "-linux-x86_64.a")' \;

      - name: Run fetch_and_build.sh (Windows)
        run: echo "y" | bash fetch_and_build.sh --window

      - name: Rename and Collect Windows Artifacts
        run: |
          mkdir -p artifacts-windows
          find . -name '*.lib' -exec bash -c 'cp {} artifacts-windows/$(basename {} "-windows-x86_64.lib")' \;

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-artifacts
          path: ./artifacts-linux/

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-artifacts
          path: ./artifacts-windows/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux-artifacts
          path: ./artifacts-linux

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows-artifacts
          path: ./artifacts-windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Linux Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts-linux/
          asset_name: quickjs-linux-x86_64.a
          asset_content_type: application/octet-stream

      - name: Upload Windows Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts-windows/
          asset_name: quickjs-windows-x86_64.lib
          asset_content_type: application/octet-stream
